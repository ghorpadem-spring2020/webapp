# JavaScript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  pr_check:
    docker:
      # specify the version you desire here
      - image: circleci/node:10
      - image: circleci/mariadb:10.2
        environment:
          MYSQL_TCP_PORT: 3306
          MYSQL_ROOT_PASSWORD:
          MYSQL_DATABASE: CSYE6225
          MYSQL_USER: A
          MYSQL_PASSWORD: 1234

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install
      #- run: node server.js


      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn test
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10
      - image: circleci/mariadb:10.2
        environment:
          MYSQL_TCP_PORT: 3306
          MYSQL_ROOT_PASSWORD:
          MYSQL_DATABASE: CSYE6225
          MYSQL_USER: A
          MYSQL_PASSWORD: 1234

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install
      #- run: node server.js

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn test

workflows:
  pr-check:
    jobs:
      - pr_check
  build_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master

